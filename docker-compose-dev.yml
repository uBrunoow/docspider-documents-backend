services:
  postgres:
    image: docker.io/postgres:16
    environment:
      POSTGRES_USER: ${DJANGO_DB_USER}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD}
      POSTGRES_DB: ${DJANGO_DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - ./docker-data/data-persist-postgres:/var/lib/postgresql/data
    networks:
      - postgres-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8081:80
    networks:
      - postgres-network

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail/config/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3060:3000"
    networks:
      - loki

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    entrypoint:
      - sh
      - -c
      - |
        /bin/prometheus --config.file=/etc/prometheus/prometheus/config/prometheus.yml --web.enable-lifecycle
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus/config/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - loki

networks:
  loki:
  postgres-network:
    driver: bridge

volumes:
  grafana_data:
  prometheus_data: